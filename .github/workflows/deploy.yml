name: Deploy BitPesa Bridge

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Run type checking
      run: pnpm type-check
      
    - name: Run linting
      run: pnpm lint
      
    - name: Run tests
      run: pnpm test
      
    - name: Build packages
      run: pnpm build

  deploy-web:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Build web app
      run: |
        cd apps/web
        pnpm build
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./apps/web/out
        cname: bitpesa.mwangaza-lab.com
        
  deploy-api:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push API Gateway
      uses: docker/build-push-action@v5
      with:
        context: ./services/api-gateway
        push: true
        tags: ghcr.io/${{ github.repository }}/api-gateway:latest
        
    - name: Build and push Lightning Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/lightning-service
        push: true
        tags: ghcr.io/${{ github.repository }}/lightning-service:latest
        
    - name: Build and push M-Pesa Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/mpesa-service
        push: true
        tags: ghcr.io/${{ github.repository }}/mpesa-service:latest
        
    - name: Build and push Transaction Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/transaction-service
        push: true
        tags: ghcr.io/${{ github.repository }}/transaction-service:latest
        
    - name: Build and push Conversion Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/conversion-service
        push: true
        tags: ghcr.io/${{ github.repository }}/conversion-service:latest
        
    - name: Build and push Receipt Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/receipt-service
        push: true
        tags: ghcr.io/${{ github.repository }}/receipt-service:latest
        
    - name: Build and push Rate Limit Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/rate-limit-service
        push: true
        tags: ghcr.io/${{ github.repository }}/rate-limit-service:latest

  deploy-infrastructure:
    needs: [deploy-web, deploy-api]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Kubernetes
      run: |
        echo "Deploying to Kubernetes cluster..."
        # Add your Kubernetes deployment commands here
        # kubectl apply -f infrastructure/kubernetes/
        
    - name: Update DNS
      run: |
        echo "Updating DNS records..."
        # Add your DNS update commands here
