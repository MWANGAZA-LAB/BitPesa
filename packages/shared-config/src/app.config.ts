import { z } from 'zod';

const appConfigSchema = z.object({
  name: z.string().default('BitPesa Bridge'),
  version: z.string().default('1.0.0'),
  description: z.string().default('Lightning-M-Pesa Bridge Platform'),
  environment: z.enum(['development', 'staging', 'production']).default('development'),
  port: z.number().int().min(1).max(65535).default(3000),
  apiVersion: z.string().default('v1'),
  corsOrigin: z.string().default('*'),
  corsCredentials: z.boolean().default(true),
  rateLimitWindowMs: z.number().int().min(1000).default(60000),
  rateLimitMax: z.number().int().min(1).default(100),
  enableSwagger: z.boolean().default(true),
  swaggerPath: z.string().default('/api/docs'),
  enableHealthCheck: z.boolean().default(true),
  healthCheckPath: z.string().default('/health'),
  enableMetrics: z.boolean().default(true),
  metricsPath: z.string().default('/metrics'),
  enableGracefulShutdown: z.boolean().default(true),
  gracefulShutdownTimeout: z.number().int().min(1000).default(10000),
  enableRequestLogging: z.boolean().default(true),
  enableErrorLogging: z.boolean().default(true),
  enablePerformanceLogging: z.boolean().default(false),
  enableSecurityHeaders: z.boolean().default(true),
  enableHelmet: z.boolean().default(true),
  enableCompression: z.boolean().default(true),
  enableCors: z.boolean().default(true),
  enableRateLimit: z.boolean().default(true),
  enableBodyParser: z.boolean().default(true),
  bodyParserLimit: z.string().default('10mb'),
  enableCookieParser: z.boolean().default(true),
  enableSession: z.boolean().default(false),
  sessionSecret: z.string().optional(),
  sessionMaxAge: z.number().int().min(1000).default(86400000),
  enableCSRF: z.boolean().default(false),
  csrfSecret: z.string().optional(),
  enableHSTS: z.boolean().default(true),
  hstsMaxAge: z.number().int().min(1).default(31536000),
  enableXSSProtection: z.boolean().default(true),
  enableNoSniff: z.boolean().default(true),
  enableFrameOptions: z.boolean().default(true),
  frameOptionsValue: z.enum(['DENY', 'SAMEORIGIN']).default('DENY'),
  enableContentTypeOptions: z.boolean().default(true),
  enableReferrerPolicy: z.boolean().default(true),
  referrerPolicyValue: z.enum(['no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'same-origin', 'strict-origin', 'strict-origin-when-cross-origin', 'unsafe-url']).default('strict-origin-when-cross-origin'),
  enablePermissionsPolicy: z.boolean().default(true),
  permissionsPolicyValue: z.string().default('camera=(), microphone=(), geolocation=()'),
});

export type AppConfig = z.infer<typeof appConfigSchema>;

export function createAppConfig(): AppConfig {
  const config = {
    name: process.env.APP_NAME || 'BitPesa Bridge',
    version: process.env.APP_VERSION || '1.0.0',
    description: process.env.APP_DESCRIPTION || 'Lightning-M-Pesa Bridge Platform',
    environment: (process.env.NODE_ENV as any) || 'development',
    port: parseInt(process.env.PORT || '3000'),
    apiVersion: process.env.API_VERSION || 'v1',
    corsOrigin: process.env.CORS_ORIGIN || '*',
    corsCredentials: process.env.CORS_CREDENTIALS !== 'false',
    rateLimitWindowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS || '60000'),
    rateLimitMax: parseInt(process.env.RATE_LIMIT_MAX || '100'),
    enableSwagger: process.env.ENABLE_SWAGGER !== 'false',
    swaggerPath: process.env.SWAGGER_PATH || '/api/docs',
    enableHealthCheck: process.env.ENABLE_HEALTH_CHECK !== 'false',
    healthCheckPath: process.env.HEALTH_CHECK_PATH || '/health',
    enableMetrics: process.env.ENABLE_METRICS !== 'false',
    metricsPath: process.env.METRICS_PATH || '/metrics',
    enableGracefulShutdown: process.env.ENABLE_GRACEFUL_SHUTDOWN !== 'false',
    gracefulShutdownTimeout: parseInt(process.env.GRACEFUL_SHUTDOWN_TIMEOUT || '10000'),
    enableRequestLogging: process.env.ENABLE_REQUEST_LOGGING !== 'false',
    enableErrorLogging: process.env.ENABLE_ERROR_LOGGING !== 'false',
    enablePerformanceLogging: process.env.ENABLE_PERFORMANCE_LOGGING === 'true',
    enableSecurityHeaders: process.env.ENABLE_SECURITY_HEADERS !== 'false',
    enableHelmet: process.env.ENABLE_HELMET !== 'false',
    enableCompression: process.env.ENABLE_COMPRESSION !== 'false',
    enableCors: process.env.ENABLE_CORS !== 'false',
    enableRateLimit: process.env.ENABLE_RATE_LIMIT !== 'false',
    enableBodyParser: process.env.ENABLE_BODY_PARSER !== 'false',
    bodyParserLimit: process.env.BODY_PARSER_LIMIT || '10mb',
    enableCookieParser: process.env.ENABLE_COOKIE_PARSER !== 'false',
    enableSession: process.env.ENABLE_SESSION === 'true',
    sessionSecret: process.env.SESSION_SECRET,
    sessionMaxAge: parseInt(process.env.SESSION_MAX_AGE || '86400000'),
    enableCSRF: process.env.ENABLE_CSRF === 'true',
    csrfSecret: process.env.CSRF_SECRET,
    enableHSTS: process.env.ENABLE_HSTS !== 'false',
    hstsMaxAge: parseInt(process.env.HSTS_MAX_AGE || '31536000'),
    enableXSSProtection: process.env.ENABLE_XSS_PROTECTION !== 'false',
    enableNoSniff: process.env.ENABLE_NO_SNIFF !== 'false',
    enableFrameOptions: process.env.ENABLE_FRAME_OPTIONS !== 'false',
    frameOptionsValue: (process.env.FRAME_OPTIONS_VALUE as any) || 'DENY',
    enableContentTypeOptions: process.env.ENABLE_CONTENT_TYPE_OPTIONS !== 'false',
    enableReferrerPolicy: process.env.ENABLE_REFERRER_POLICY !== 'false',
    referrerPolicyValue: (process.env.REFERRER_POLICY_VALUE as any) || 'strict-origin-when-cross-origin',
    enablePermissionsPolicy: process.env.ENABLE_PERMISSIONS_POLICY !== 'false',
    permissionsPolicyValue: process.env.PERMISSIONS_POLICY_VALUE || 'camera=(), microphone=(), geolocation=()',
  };

  return appConfigSchema.parse(config);
}

export const APP_CONFIG = createAppConfig();
