# Base Dockerfile template for BitPesa services
# This template reduces duplication across service Dockerfiles

# Multi-stage build configuration
ARG NODE_VERSION=20-alpine
ARG PNPM_VERSION=8.10.0

# Base stage with common dependencies
FROM node:${NODE_VERSION} AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    curl \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm@${PNPM_VERSION}

# Dependencies stage
FROM base AS deps

# Copy package files
COPY package.json pnpm-lock.yaml* ./
COPY packages/*/package.json ./packages/*/

# Install dependencies
RUN pnpm install --frozen-lockfile --prod=false

# Build stage
FROM base AS builder

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/packages ./packages

# Copy source code
COPY . .

# Build shared packages first (dependency order)
RUN pnpm --filter @bitpesa/shared-types build
RUN pnpm --filter @bitpesa/shared-utils build
RUN pnpm --filter @bitpesa/shared-config build

# Build the specific service (to be overridden)
ARG SERVICE_NAME
RUN pnpm --filter @bitpesa/${SERVICE_NAME} build

# Production stage
FROM base AS runner

# Set production environment
ENV NODE_ENV=production
ENV PORT=3000

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nestjs

# Copy built application
ARG SERVICE_NAME
COPY --from=builder --chown=nestjs:nodejs /app/packages/${SERVICE_NAME}/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/packages/${SERVICE_NAME}/package.json ./package.json

# Copy shared packages
COPY --from=builder --chown=nestjs:nodejs /app/packages/shared-types/dist ./packages/shared-types/dist
COPY --from=builder --chown=nestjs:nodejs /app/packages/shared-utils/dist ./packages/shared-utils/dist
COPY --from=builder --chown=nestjs:nodejs /app/packages/shared-config/dist ./packages/shared-config/dist

# Copy production dependencies
COPY --from=deps --chown=nestjs:nodejs /app/node_modules ./node_modules

# Switch to non-root user
USER nestjs

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose port
EXPOSE ${PORT}

# Start application
CMD ["node", "dist/index.js"]
